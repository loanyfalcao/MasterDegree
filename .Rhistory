library(lmtest)
install.packages("pacman")
install.packages("ggplot2")
install.packages("pacman")
install.packages("lmtest")
library(lmtest)
library(pacman)
library(ggplot2)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
dados <- read.csv('Arquivos/Logit/df_vitimas_acidentes_2_2010-2022.csv', stringsAsFactors = TRUE, fileEncoding = "latin1")
install.packages("pacman")
install.packages("pacman")
setwd("C:/Users/Public/Documents/Python Scripts/MasterDegree")
dados <- read.csv('Arquivos/Logit/df_vitimas_acidentes_2_2010-2022.csv', stringsAsFactors = TRUE, fileEncoding = "latin1")
str(dados)
# Fatal = categoria de referencia
dados$Gravidade <- factor(dados$Gravidade, levels = c("1", "0"))
levels(dados$Gravidade)
#Outras categorias
dados$Sexo <- relevel(dados$Sexo, ref = "M")
dados$Faixa_Etaria <- relevel(dados$Faixa_Etaria, ref = "18-24 anos")
dados$CondicaoPista <- relevel(dados$CondicaoPista, ref = "Seca")
dados$PerfilPista <- relevel(dados$PerfilPista, ref = "Em Nivel")
dados$Estacao <- relevel(dados$Estacao, ref = "Verão")
dados$Local <- relevel(dados$Local, ref = "Principal")
dados$TipoAcidente <- relevel(dados$TipoAcidente, ref = "Queda de Moto")
dados$TracadoPista <- relevel(dados$TracadoPista, ref = "Reta")
dados$TipoLocal <- relevel(dados$TipoLocal, ref = "Rural")
dados$Num_Veiculos <- relevel(dados$Num_Veiculos, ref = "Um")
dados$Motocicleta <- relevel(dados$Motocicleta, ref = "True")
dados$Veiculo_Leve <- relevel(dados$Veiculo_Leve, ref = "True")
dados$Veiculo_Pesado <- relevel(dados$Veiculo_Pesado, ref = "True")
dados$Veiculo_Passageiro <- relevel(dados$Veiculo_Passageiro, ref = "True")
dados$Cluster <- relevel(dados$Cluster, ref = "True")
dados$Ano_2014 <- relevel(dados$Ano_2014, ref = "True")
mod <- glm(Gravidade ~ Sexo + Faixa_Etaria + CondicaoPista + PerfilPista + Estacao + Período + TipoAcidente + TracadoPista + TipoLocal + Motocicleta + Veiculo_Leve + Veiculo_Pesado + Veiculo_Passageiro + Volume_Log + Num_Veiculos + TracadoPista*CondicaoPista,
family = binomial(link = 'logit'), data = dados)
#Precisa ficar entre -3 e 3
summary(stdres(mod))
mod <- glm(Gravidade ~ Sexo + Faixa_Etaria + CondicaoPista + PerfilPista + Estacao + Período + TipoAcidente + TracadoPista + TipoLocal + Motocicleta + Veiculo_Leve + Veiculo_Pesado + Veiculo_Passageiro + Volume_Log + Num_Veiculos + TracadoPista*CondicaoPista,
family = binomial(link = 'logit'), data = dados)
#Precisa ficar entre -3 e 3
summary(stdres(mod))
library(lmtest)
library(pacman)
library(ggplot2)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
install.packages("lmtest")
install.packages("lmtest")
library(lmtest)
library(pacman)
library(ggplot2)
pacman::p_load(dplyr, psych, car, MASS, DescTools, QuantPsyc, ggplot2)
setwd("C:/Users/Public/Documents/Python Scripts/MasterDegree")
dados <- read.csv('Arquivos/Logit/df_vitimas_acidentes_2_2010-2022.csv', stringsAsFactors = TRUE, fileEncoding = "latin1")
str(dados)
# Fatal = categoria de referencia
dados$Gravidade <- factor(dados$Gravidade, levels = c("1", "0"))
levels(dados$Gravidade)
#Outras categorias
dados$Sexo <- relevel(dados$Sexo, ref = "M")
dados$Faixa_Etaria <- relevel(dados$Faixa_Etaria, ref = "18-24 anos")
dados$CondicaoPista <- relevel(dados$CondicaoPista, ref = "Seca")
dados$PerfilPista <- relevel(dados$PerfilPista, ref = "Em Nivel")
dados$Estacao <- relevel(dados$Estacao, ref = "Verão")
dados$Local <- relevel(dados$Local, ref = "Principal")
dados$TipoAcidente <- relevel(dados$TipoAcidente, ref = "Queda de Moto")
dados$TracadoPista <- relevel(dados$TracadoPista, ref = "Reta")
dados$TipoLocal <- relevel(dados$TipoLocal, ref = "Rural")
dados$Num_Veiculos <- relevel(dados$Num_Veiculos, ref = "Um")
dados$Motocicleta <- relevel(dados$Motocicleta, ref = "True")
dados$Veiculo_Leve <- relevel(dados$Veiculo_Leve, ref = "True")
dados$Veiculo_Pesado <- relevel(dados$Veiculo_Pesado, ref = "True")
dados$Veiculo_Passageiro <- relevel(dados$Veiculo_Passageiro, ref = "True")
dados$Cluster <- relevel(dados$Cluster, ref = "True")
dados$Ano_2014 <- relevel(dados$Ano_2014, ref = "True")
mod <- glm(Gravidade ~ Sexo + Faixa_Etaria + CondicaoPista + PerfilPista + Estacao + Período + TipoAcidente + TracadoPista + TipoLocal + Motocicleta + Veiculo_Leve + Veiculo_Pesado + Veiculo_Passageiro + Volume_Log + Num_Veiculos + TracadoPista*CondicaoPista,
family = binomial(link = 'logit'), data = dados)
#Precisa ficar entre -3 e 3
summary(stdres(mod))
## Overall effects. Quanto menor o Pvalue, mais influente
Anova(mod, type = 'II', test = "Wald")
### Multicolinearidade: VIF > 10
VIF(mod)
## Overall effects. Quanto menor o Pvalue, mais influente
Anova(mod, type = 'II', test = "Wald")
## Efeitos especificos
summary(mod)
## Efeitos especificos
summary(mod)
## Obtencao das razoes de chance com IC 95% (usando erro padrao = SPSS)
exp(cbind(OR = coef(mod), confint.default(mod)))
mod2 <- glm(Gravidade ~ Sexo + Faixa_Etaria + CondicaoPista + PerfilPista + Estacao + Período + TipoAcidente + TracadoPista + TipoLocal + Motocicleta + Veiculo_Leve + Veiculo_Pesado + Veiculo_Passageiro + Volume_Log + Num_Veiculos + TracadoPista*CondicaoPista,,
family = binomial(link = 'logit'), data = dados)
summary(stdres(mod2))
#Teste de White
bptest(mod2, ~fitted(mod)^2)
mod2 <- glm(Gravidade ~ Sexo + Faixa_Etaria + CondicaoPista + PerfilPista + Estacao + Período + TipoAcidente + TracadoPista + TipoLocal + Motocicleta + Veiculo_Pesado + Veiculo_Passageiro + Volume_Log + Num_Veiculos + TracadoPista*CondicaoPista,
family = binomial(link = 'logit'), data = dados)
#Precisa ficar entre -3 e 3
summary(stdres(mod2))
### Multicolinearidade: VIF > 10
VIF(mod2)
# Tabela de classificacao
ClassLog(mod, dados_filtrados$Gravidade)
dados_filtrados2 <- dados[c("Sexo", "Faixa_Etaria", "CondicaoPista", "PerfilPista", "Estacao", "Período", "TipoAcidente", "TracadoPista", "TipoLocal", "Motocicleta", "Veiculo_Pesado", "Veiculo_Passageiro", "Volume_Log", "Num_Veiculos")]
dados_filtrados <- dados[c("Sexo", "Faixa_Etaria", "CondicaoPista", "PerfilPista", "Estacao", "Período", "TipoAcidente", "TracadoPista", "TipoLocal", "Motocicleta", "Veiculo_Leve", "Veiculo_Pesado", "Veiculo_Passageiro", "Volume_Log", "Num_Veiculos")]
# Tabela de classificacao
ClassLog(mod, dados_filtrados$Gravidade)
ClassLog(mod2, dados_filtrados2$Gravidade)
## Pseudo R-quadrado
PseudoR2(mod, which = "Nagelkerke")
PseudoR2(mod2, which = "Nagelkerke")
# Compara??o de modelos
## AIC e BIC
AIC(mod, mod2)
BIC(mod, mod2)
